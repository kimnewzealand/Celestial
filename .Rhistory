# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizlines_sf,colour="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) ) +
ggsflabel::geom_sf_text_repel(data= stars_bright_sf,
aes(label=stars_bright_sf$name),
nudge_x = -1,
colour="yellow",
size=2)+
ggsflabel::geom_sf_text_repel(data= constellation_lines_sf,
aes(label=constellation_lines_sf$id),
nudge_x = -1,
colour="lightblue",
size=2)+
geom_sf(data =constellation_lines_sf %>%
# From the interactive star map we can find the constellations that cross 0 degrees http://ofrohn.github.io/celestial-demo/map.html
filter(!id %in% c("Vir", "Hya", "UMi", "UMa", "Cen", "Cha","Mus","Dra")), alpha=0.2,colour="lightgrey")  +
theme_nightsky()+
ggtitle("Constellations, the Stars and the Milky Way")
extent(milkyhorizlines_sf)
st_simplify(milkyhorizlines_sf)
st_combine(milkyhorizlines_sf)
# Plot the horizontal lines only
st_combine(milkyhorizlines_sf) %>%
ggplot()+
geom_sf()
st_cast(st_combine(milkyhorizlines_sf),"POLYGON")
st_convex_hull(st_combine(milkyhorizlines_sf),"POLYGON")
st_convex_hull(st_combine(milkyhorizlines_sf))
# Plot the horizontal lines only
st_convex_hull(st_combine(milkyhorizlines_sf)) %>%
ggplot()+
geom_sf()
# Plot the horizontal lines only
st_convex_hull(milkyhorizlines_sf) %>%
ggplot()+
geom_sf()
st_convex_hull(milkyhorizlines_sf)
map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf()
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_points()
# Now create an sf object with all the points
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_points()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf()
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_point()
_
# Now create an sf object with all the points
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_point()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf()
# Now create an sf object with all the points
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_cast("MULTIPOINT") %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf()
# Now create an sf object with all the points
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
})  %>%
st_sfc(crs=st_crs(earth))  %>%
st_cast("MULTIPOINT") %>%
st_sf()
# Plot the horizontal lines only
milkyhorizpoints_sf %>%
ggplot()+
geom_sf()
# Plot the horizontal lines only
milkyhorizpoints_sf %>%
st_convex_hull() %>%
ggplot()+
geom_sf()
# Plot the horizontal lines only
milkyhorizpoints_sf %>%
st_combine() %>%
st_convex_hull() %>%
ggplot()+
geom_sf()
# Now create an sf object with all the points
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
})  %>%
st_sfc(crs=st_crs(earth))  %>%
st_cast("MULTIPOINT") %>%
st_sf() %>%
st_combine() %>%
st_convex_hull()
# Plot the points of the constellation_sf points object. Ensure the geom_sf function has data = https://www.jessesadler.com/post/gis-with-r-intro/
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizpoints_sf,colour="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) ) +
ggsflabel::geom_sf_text_repel(data= stars_bright_sf,
aes(label=stars_bright_sf$name),
nudge_x = -1,
colour="yellow",
size=2)+
ggsflabel::geom_sf_text_repel(data= constellation_lines_sf,
aes(label=constellation_lines_sf$id),
nudge_x = -1,
colour="lightblue",
size=2)+
geom_sf(data =constellation_lines_sf %>%
# From the interactive star map we can find the constellations that cross 0 degrees http://ofrohn.github.io/celestial-demo/map.html
filter(!id %in% c("Vir", "Hya", "UMi", "UMa", "Cen", "Cha","Mus","Dra")), alpha=0.2,colour="lightgrey")  +
theme_nightsky()+
ggtitle("Constellations, the Stars and the Milky Way")
milkyhorizpoints_sf
class(milkyhorizpoints_sf)
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
})  %>%
st_sfc(crs=st_crs(earth))  %>%
st_cast("MULTIPOINT") %>%
st_sf()
# Plot the horizontal lines only
milkyhorizpoints_sf  %>%
ggplot()+
geom_sf()
View(milkyhorizpoints_sf)
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
})  %>%
st_sfc(crs=st_crs(earth))  %>%
st_cast("POINT")
milkyhorizpoints_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
})  %>%
st_sfc(crs=st_crs(earth))
milkyhorizpoints_sf
# Now create an sf object with all the lines
milkyhorizlines_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf() %>%
# Cast to MULTILINESTRING to avoid Error in CPL_geos_is_empty(st_geometry(x)) :
st_cast("MULTILINESTRING")
milkyhorizlines_sf
map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
})
# Plot the horizontal lines only
milkyhorizlines_sf %>%
ggplot()+
geom_sf()
map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE)
milkyhorizlines_sf$geometry
milkyhorizlines_sf$geometry[1]
st_combine(milkyhorizlines_sf[2],milkyhorizlines_sf[3]) %>%
st_convex_hull()
st_combine(milkyhorizlines_sf[2],milkyhorizlines_sf[3])
st_coordinates(milkyhorizlines_sf)
# Now create an sf object with all the lines
milkyhorizlines_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf() %>%
# Cast to MULTILINESTRING to avoid Error in CPL_geos_is_empty(st_geometry(x)) :
st_cast("MULTILINESTRING") %>%
dplyr::mutate(latt = sf::st_coordinates()[,1]) %>%
dplyr::mutate(lonn = sf::st_coordinates()[,2])
# Now create an sf object with all the lines
milkyhorizlines_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf() %>%
# Cast to MULTILINESTRING to avoid Error in CPL_geos_is_empty(st_geometry(x)) :
st_cast("MULTILINESTRING") %>%
dplyr::mutate(latt = sf::st_coordinates(.$center)[,1]) %>%
dplyr::mutate(lonn = sf::st_coordinates(.$center)[,2])
# Now create an sf object with all the lines
milkyhorizlines_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf() %>%
# Cast to MULTILINESTRING to avoid Error in CPL_geos_is_empty(st_geometry(x)) :
st_cast("MULTILINESTRING") %>%
dplyr::mutate(latt = sf::st_coordinates())
# Now create an sf object with all the lines
milkyhorizlines_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf() %>%
# Cast to MULTILINESTRING to avoid Error in CPL_geos_is_empty(st_geometry(x)) :
st_cast("MULTILINESTRING") %>%
dplyr::mutate(latt = sf::st_coordinates(.))
# Now create an sf object with all the lines
milkyhorizlines_sf <- map(split(milkycoords_cross, seq(nrow(milkycoords_cross))), function(row) {
matrix(unlist(row[1:4]), ncol = 2, byrow = TRUE) %>%
st_linestring()
}) %>%
st_sfc(crs=st_crs(earth))  %>%
st_sf() %>%
# Cast to MULTILINESTRING to avoid Error in CPL_geos_is_empty(st_geometry(x)) :
st_cast("MULTILINESTRING") %>%
dplyr::mutate(lat = unlist(map(.$geometry,1)),
long = unlist(map(.$geometry,2)))
milkyhorizlines_sf %>%
dplyr::mutate(lat = unlist(map(milkyhorizlines_sf$geometry,1)),
long = unlist(map(milkyhorizlines_sf$geometry,2)))
?st_combine
# Plot the horizontal lines only
st_union(milkyhorizlines_sf[2] ,milkyhorizlines_sf[4]) %>%
ggplot()+
geom_sf()
st_coordinates(milkyhorizlines_sf)
# Now create an sf object with all the points
milkyhorizpoints_sf <-
cbind(milkyhorizpoints_sf,st_coordinates(milkyhorizlines_sf))
# Now create an sf object with all the points
milkyhorizpoints_sf <-
cbind(milkyhorizlines_sf,st_coordinates(milkyhorizlines_sf))
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("MULTIPOINTS")
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("MULTIPOINT")
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("POINT")
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("POINT") %>%
cbind(., st_coordinates(.))
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("POINT") %>%
cbind(., st_coordinates(.)) %>%
filter(Y<0)
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("POINT") %>%
cbind(., st_coordinates(.)) %>%
filter(Y<0) %>%
st_convex_hull()
# Plot the horizontal lines only
milkyhorizpoints_sf  %>%
ggplot()+
geom_sf()
# Now create an sf object with all the points
milkyhorizpoints_sf <- milkyhorizlines_sf %>%
st_cast("POINT") %>%
cbind(., st_coordinates(.)) %>%
filter(Y<0) %>%
st_combine() %>%
st_convex_hull()
# Plot the horizontal lines only
milkyhorizpoints_sf  %>%
ggplot()+
geom_sf()
# Now create an sf object with all the points
milkyhorizhull_sf <- milkyhorizlines_sf %>%
st_cast("POINT") %>%
cbind(., st_coordinates(.)) %>%
filter(Y<0) %>%
st_combine() %>%
st_convex_hull()
# Plot the points of the constellation_sf points object. Ensure the geom_sf function has data = https://www.jessesadler.com/post/gis-with-r-intro/
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,colour="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) ) +
ggsflabel::geom_sf_text_repel(data= stars_bright_sf,
aes(label=stars_bright_sf$name),
nudge_x = -1,
colour="yellow",
size=2)+
ggsflabel::geom_sf_text_repel(data= constellation_lines_sf,
aes(label=constellation_lines_sf$id),
nudge_x = -1,
colour="lightblue",
size=2)+
geom_sf(data =constellation_lines_sf %>%
# From the interactive star map we can find the constellations that cross 0 degrees http://ofrohn.github.io/celestial-demo/map.html
filter(!id %in% c("Vir", "Hya", "UMi", "UMa", "Cen", "Cha","Mus","Dra")), alpha=0.2,colour="lightgrey")  +
theme_nightsky()+
ggtitle("Constellations, the Stars and the Milky Way")
# Plot the points of the constellation_sf points object. Ensure the geom_sf function has data = https://www.jessesadler.com/post/gis-with-r-intro/
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
# scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,colour="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) ) +
ggsflabel::geom_sf_text_repel(data= stars_bright_sf,
aes(label=stars_bright_sf$name),
nudge_x = -1,
colour="yellow",
size=2)+
ggsflabel::geom_sf_text_repel(data= constellation_lines_sf,
aes(label=constellation_lines_sf$id),
nudge_x = -1,
colour="lightblue",
size=2)+
geom_sf(data =constellation_lines_sf %>%
# From the interactive star map we can find the constellations that cross 0 degrees http://ofrohn.github.io/celestial-demo/map.html
filter(!id %in% c("Vir", "Hya", "UMi", "UMa", "Cen", "Cha","Mus","Dra")), alpha=0.2,colour="lightgrey")  +
theme_nightsky()+
ggtitle("Constellations, the Stars and the Milky Way")
# Plot the points of the constellation_sf points object. Ensure the geom_sf function has data = https://www.jessesadler.com/post/gis-with-r-intro/
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) ) +
ggsflabel::geom_sf_text_repel(data= stars_bright_sf,
aes(label=stars_bright_sf$name),
nudge_x = -1,
colour="yellow",
size=2)+
ggsflabel::geom_sf_text_repel(data= constellation_lines_sf,
aes(label=constellation_lines_sf$id),
nudge_x = -1,
colour="lightblue",
size=2)+
geom_sf(data =constellation_lines_sf %>%
# From the interactive star map we can find the constellations that cross 0 degrees http://ofrohn.github.io/celestial-demo/map.html
filter(!id %in% c("Vir", "Hya", "UMi", "UMa", "Cen", "Cha","Mus","Dra")), alpha=0.2,colour="lightgrey")  +
theme_nightsky()+
ggtitle("Constellations, the Stars and the Milky Way")
# Plot the points of the constellation_sf points object. Ensure the geom_sf function has data = https://www.jessesadler.com/post/gis-with-r-intro/
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,alpha=0.4,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) ) +
ggsflabel::geom_sf_text_repel(data= stars_bright_sf,
aes(label=stars_bright_sf$name),
nudge_x = -1,
colour="yellow",
size=2)+
ggsflabel::geom_sf_text_repel(data= constellation_lines_sf,
aes(label=constellation_lines_sf$id),
nudge_x = -1,
colour="lightblue",
size=2)+
geom_sf(data =constellation_lines_sf %>%
# From the interactive star map we can find the constellations that cross 0 degrees http://ofrohn.github.io/celestial-demo/map.html
filter(!id %in% c("Vir", "Hya", "UMi", "UMa", "Cen", "Cha","Mus","Dra")), alpha=0.2,colour="lightgrey")  +
theme_nightsky()+
ggtitle("Constellations, the Stars and the Milky Way")
# Create a ggplot object. geom_GeomTextRepel() has yet to be implemented in plotly, so we will use the hover text functionality.
starplot <-
# Add the star name as a tooltip using the label as an aesthetic
ggplot(text=past0("Name: ",stars_bright_sf$name))+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,alpha=0.4,fill="black" ) +
geom_sf(data=milkyhorizlines_sf,alpha=0.4,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) )
# Create a ggplot object. geom_GeomTextRepel() has yet to be implemented in plotly, so we will use the hover text functionality.
starplot <-
# Add the star name as a tooltip using the label as an aesthetic
ggplot(text=paste0("Name: ",stars_bright_sf$name))+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,alpha=0.4,fill="black" ) +
geom_sf(data=milkyhorizlines_sf,alpha=0.4,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag) )
# Create plotly object
plotly_sp <- plotly::ggplotly(starplot, width = 500, height = 500, dynamicTicks = "y")
# Use htmlwidgets to save plotly object
htmlwidgets::saveWidget(plotly_sp, file="plotly_sp.html")
# Create a ggplot object. geom_GeomTextRepel() has yet to be implemented in plotly, so we will use the hover text functionality.
starplot <-
# Add the star name as a tooltip using the label as an aesthetic
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,alpha=0.4,fill="black" ) +
geom_sf(data=milkyhorizlines_sf,alpha=0.4,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag),text=paste0("Name: ",stars_bright_sf$name) )+
theme_nightsky()+
ggtitle("The Stars and the Milky Way")
# Create a ggplot object. geom_GeomTextRepel() has yet to be implemented in plotly, so we will use the hover text functionality.
starplot <-
# Add the star name as a tooltip using the label as an aesthetic
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,alpha=0.4,fill="black" ) +
geom_sf(data=milkyhorizlines_sf,alpha=0.4,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag,text=paste0("Name: ",stars_bright_sf$name) ))+
theme_nightsky()+
ggtitle("The Stars and the Milky Way")
# Create a ggplot object. geom_GeomTextRepel() has yet to be implemented in plotly, so we will use the hover text functionality.
starplot <-
# Add the star name as a tooltip using the label as an aesthetic
ggplot()+
geom_sf( data = milky_sf,alpha=0.4,aes(fill=id)) +
# Fill the milky way - inversely plot the discrete polygon values from light grey in the center
scale_fill_grey()+
# Plot the milky way horiz lines as black to blank them out of the plot
geom_sf(data=milkyhorizhull_sf,alpha=0.4,fill="black" ) +
geom_sf(data=milkyhorizlines_sf,alpha=0.4,fill="black" ) +
# Plot the consteallation stars  as small white dots
#geom_sf( data=stars_sf, colour="white",size=0.1) +
# Now plot the bright stars
geom_sf(data=stars_bright_sf, colour="white", aes(size=stars_bright_sf$newmag ))+
theme_nightsky()+
ggtitle("The Stars and the Milky Way")
# Create plotly object
plotly_sp <- plotly::ggplotly(starplot, width = 500, height = 500, dynamicTicks = "y")
# Use htmlwidgets to save plotly object
htmlwidgets::saveWidget(plotly_sp, file="plotly_sp.html")
knitr::opts_chunk$set(echo = TRUE)
# Use ggplot to plot the brighest stars by constellation
stars_bright_sf %>%
ggplot()+
# Group the stars by constellation
geom_sf(aes(size=newmag,colour=con))
# Use ggplot to plot the brighest stars by constellation
stars_bright_sf %>%
ggplot()+
# Group the stars by constellation
geom_sf(aes(size=newmag,colour=con))+
geom_sf_label(aes(label=name))
# Use ggplot to plot the brighest stars by constellation
stars_bright_sf %>%
ggplot()+
# Group the stars by constellation
geom_sf(aes(size=newmag,colour=con))+
geom_sf_text(aes(label=name))
# Try to remove the lines by setting extent
constellation_lines_sf %>%
filter(id=="Vir") %>%
ggplot()+
geom_sf() +
# Set the extent of the map using coord_sf
coord_sf(xlim = c(-180,170),expand=FALSE)
View(constellation_lines_sf_p)
